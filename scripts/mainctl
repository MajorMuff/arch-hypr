#!/bin/bash
#    ___      ___
#   |"  \    /"  | ⊏
#    \   \  //   | ⊓
#    /\   \/.    | ⊐
#   |: \.        | ⊔
#   |.  \    /:  | ⊏
#   |___|\__/|___| ⊓
#
#   Usage: mainctl [OPTION] (ARGS)
#     --gamemode            toggles opacity and blur for all active windows
#     --gammastep           toggles gammastep on/off
#     --swayidle            starts swayidle process to turn off displays after inactivity
#     --wallpaper           chooses new random wallpaper and restarts hyprpaper
#     --volume [ARG]        allows volume control
#       -i                  increase volume by 2 percent
#       -d                  decrease volume by 2 percent
#       -m                  mute volume
#     --screenshot [ARG]    creates screenshot and copies it to the clipboard
#       -f                  fullscreen screenshot
#       -s                  selection screenshot
#
#     --help                show this information and exit

globalConf="$HOME/dotfiles/global.json"
privateConf="$HOME/dotfiles/private.json"

function usage {
	printf "\n  Usage: mainctl [OPTION] (ARGS)\n\n"
	printf "    --gamemode            toggles opacity and blur for all active windows\n"
	printf "    --gammastep           toggles gammastep on/off\n"
	printf "    --swayidle            starts swayidle process to turn off displays after inactivity\n"
	printf "    --wallpaper           chooses new random wallpaper and restarts hyprpaper\n"
	printf "    --volume [ARG]        allows volume control\n"
	printf "      -i                  increase volume by 2 percent\n"
	printf "      -d                  decrease volume by 2 percent\n"
	printf "      -m                  mute volume\n"
	printf "    --screenshot [ARG]    creates screenshot and copies it to the clipboard\n"
	printf "      -f                  fullscreen screenshot\n"
	printf "      -s                  selection screenshot\n"
	printf "\n"
	printf "    --help                show this information and exit\n"
	printf "\n"
}

function log_notify {
	local errTitle errMsg
	local logfile="/var/log/mainctl.log"
	case "$1" in
		"gamemode-proc") errTitle="Gamemode"; errMsg="Failed to create temp file. No rights?" ;;
		"gammastep-proc") errTitle="Gammastep"; errMsg="Failed to create temp file. No rights?" ;;
	esac

	printf "$(date '+%Y-%m-%d %H:%M:%S') - %s: %s\n" "$errTitle" "$errMsg" >> "$logfile"

	notify-send "${errTitle}" "${errMsg}"

	exit 1
}

function toggle_gammastep {
	local procFile="/tmp/gammastep.proc"
	local toggleFile="/tmp/gammastep.toggle"

	[[ -f $procFile ]] && exit 1

	touch "$procFile"

	if pidof gammastep >/dev/null; then
		killall gammastep
		rm "$toggleFile"
		notify-send "Gammastep" "Gammastep disabled."
	else
		touch "$toggleFile"
		"$HOME"/scripts/launch gammastep -l "$(jq '.location.latitude' "$privateConf"):$(jq '.location.longtitude' "$privateConf")"
		notify-send "Gammastep" "Gammastep enabled."
	fi

	sleep 4
	rm "$procFile"
}

function start_swayidle {
	if pidof swayidle >/dev/null; then exit 1; fi
	
	swayidle timeout 360 'hyprctl dispatch dpms off DP-2; hyprctl dispatch dpms off DP-1' \
		resume 'hyprctl dispatch dpms on DP-1; hyprctl dispatch dpms on DP-2' &
}

function toggle_gamemode {
	local procFile="/tmp/gamemode.proc"
	local toggleFile="/tmp/gamemode.toggle"

	[[ -f "$procFile" ]] && exit 1

	touch "$procFile"

	if [ -f "$toggleFile" ]; then 
		local activeOpacity inactiveOpacity fullscreenOpacity gapsIn gapsOut dropShadow rounding blur

		activeOpacity=$(jq ".hyprland.decoration.active_opacity" "$globalConf")
		inactiveOpacity=$(jq ".hyprland.decoration.inactive_opacity" "$globalConf")
		fullscreenOpacity=$(jq ".hyprland.decoration.fullscreen_opacity" "$globalConf")
		dropShadow=$(jq ".hyprland.decoration.drop_shadow" "$globalConf")
		rounding=$(jq ".hyprland.decoration.rounding" "$globalConf")
		blur=$(jq ".hyprland.decoration.blur.enabled" "$globalConf")

		gapsIn=$(jq ".hyprland.general.gaps_in" "$globalConf")
		gapsOut=$(jq ".hyprland.general.gaps_out" "$globalConf")

		hyprctl --batch "\
			keyword decoration:active_opacity $activeOpacity;\
			keyword decoration:inactive_opacity $inactiveOpacity;\
			keyword decoration:fullscreen_opacity $fullscreenOpacity;\
			keyword decoration:drop_shadow $dropShadow;\
			keyword decoration:blur:enabled $blur;\
			keyword decoration:rounding $rounding;\
			keyword general:gaps_in $gapsIn;\
			keyword general:gaps_out $gapsOut"

		start_swayidle
		rm "$toggleFile"
		notify-send "Gamemode" "Gamemode disabled."
	else
		hyprctl --batch "\
			keyword decoration:active_opacity 1;\
			keyword decoration:inactive_opacity 1;\
			keyword decoration:fullscreen_opacity 1;\
			keyword decoration:drop_shadow false;\
			keyword decoration:rounding 0;\
			keyword decoration:blur:enabled false;\
			keyword general:gaps_in 0;\
			keyword general:gaps_out 0"
		killall swayidle
		touch "$toggleFile"
		notify-send "Gamemode" "Gamemode enabled."
	fi

	sleep 2
	rm "$procFile"
}

function wallpaper {
	local wpFolder randomWallpaper filename

	wpFolder="$HOME/Pictures/wallpapers"
	randomWallpaper=$(find "$wpFolder" -type f | shuf -n1)
	filename=$(basename "$randomWallpaper")

	cp "$wpFolder/$filename" "$wpFolder/.current/wallpaper.png"

	hyprctl hyprpaper unload all &&
	killall hyprpaper &&
	hyprpaper &
}

function volume {
	case "$1" in
		"-i")
			if [ ! "$(amixer -D pulse sget Master | tail -1 | cut -d '[' -f 2 | cut -d '%' -f 1)" -ge 100 ]; then
				pactl -- set-sink-volume 0 +2%
			fi ;;
			
		"-d")
			if [ ! "$(amixer -D pulse sget Master | tail -1 | cut -d '[' -f 2 | cut -d '%' -f 1)" -le 0 ]; then
				pactl -- set-sink-volume 0 -2%
			fi ;;
			
		"-m") pactl -- set-sink-mute 0 toggle ;;
	esac
}

function screenshot {
	local savedir filename

	savedir=/tmp
	filename="$savedir/$(date +'%Y%m%d-%H%M%S').png"
	 
	function shot_selection {
		if grim -g "$(slurp)" "$filename"; then
			wl-copy < "$filename"
			notify-send "Screenshot" "Copied to clipboard."
			exit 0
		else
			notify-send 'Error saving file'
			exit 1
		fi
	}
			
	function shot_fullscreen { 
		if grim "$filename"; then
			wl-copy < "$filename"
			notify-send "Screenshot" "Copied to clipboard."
			exit 0
		else
			notify-send 'Error saving file'
			exit 1
		fi
	}

	case "$1" in
		"-s") shot_selection ;;
		"-f") shot_fullscreen ;;
	esac
}

function waybarctl {
	case "$1" in
		"reset")
			if pidof "waybar"; then
				killall waybar
				sleep 0.2s
			fi
			launch waybar
			;;
		*)
			exit 1;
	esac
}

function main {
	case "$1" in
		"--gamemode") toggle_gamemode ;;
		"--gammastep") toggle_gammastep ;;
		"--swayidle") start_swayidle ;;
		"--wallpaper") wallpaper ;;
		"--volume") volume "$2" ;;
		"--screenshot") screenshot "$2" ;;
		"waybar") waybarctl "$2" ;;
		"--help"|*) usage ;;
	esac
}

main "$@"