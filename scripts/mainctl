#!/bin/bash
#   ___      ___
#  |"  \    /"  | ⊏
#   \   \  //   | ⊓
#   /\   \/.    | ⊐
#  |: \.        | ⊔
#  |.  \    /:  | ⊏
#  |___|\__/|___| ⊓
#
#  Usage: mainctl [OPTION] (ARGS)
#    --gamemode            toggles opacity and blur for all active windows
#    --gammastep           toggles gammastep on/off
#    --swayidle            starts swayidle process to turn off displays after inactivity
#    --wallpaper           chooses new random wallpaper and restarts hyprpaper
#    --volume [ARG]        allows volume control
#      -i                  increase volume by 2 percent
#      -d                  decrease volume by 2 percent
#      -m                  mute volume
#    --screenshot [ARG]    creates screenshot and copies it to the clipboard
#      -f                  fullscreen screenshot
#      -s                  selection screenshot
#    --help                show this information and exit



usage () {
	printf "\n  Usage: mainctl [OPTION] (ARGS)\n\n"
	printf "    --gamemode            toggles opacity and blur for all active windows\n"
	printf "    --gammastep           toggles gammastep on/off\n"
	printf "    --swayidle            starts swayidle process to turn off displays after inactivity\n"
	printf "    --wallpaper           chooses new random wallpaper and restarts hyprpaper\n"
	printf "    --volume [ARG]        allows volume control\n"
	printf "      -i                  increase volume by 2 percent\n"
	printf "      -d                  decrease volume by 2 percent\n"
	printf "      -m                  mute volume\n"
	printf "    --screenshot [ARG]    creates screenshot and copies it to the clipboard\n"
	printf "      -f                  fullscreen screenshot\n"
	printf "      -s                  selection screenshot\n"
	printf "\n"
	printf "    --help                show this information and exit\n"
	printf "\n"
}


# gamemode toggles opacity and blur for all windows, freeing up resources for games and other applications
toggle_gamemode () {
	[[ -f /tmp/gamemode_proc ]] && exit 1

	local mainConfigFile toggleFile gamemodeState

	mainConfigFile="$HOME/dotfiles/main.conf"
	toggleFile="$HOME/dotfiles/toggles.conf"
	gamemodeState=$(grep 'gamemode' "$toggleFile" | cut -d= -f2 | xargs)

	touch /tmp/gamemode_proc

	if [ "$gamemodeState" = false ]; then
		hyprctl keyword decoration:active_opacity 1 &&
		hyprctl keyword decoration:inactive_opacity 1 &&
		hyprctl keyword decoration:blur:enabled false
		sed -i "s/gamemode.*/gamemode = true/" "$toggleFile"
		notify-send "Gamemode" "Gamemode enabled."
	else
		defActiveOpacity=$(grep 'defActiveOpacity' "$mainConfigFile" | cut -d':' -f2 | xargs)
		defInactiveOpacity=$(grep 'defInactiveOpacity' "$mainConfigFile" | cut -d':' -f2 | xargs)
		hyprctl keyword decoration:active_opacity "$defActiveOpacity" &&
		hyprctl keyword decoration:inactive_opacity "$defInactiveOpacity" &&
		hyprctl keyword decoration:blur:enabled true
		sed -i "s/gamemode.*/gamemode = false/" "$toggleFile"
		notify-send "Gamemode" "Gamemode disabled."
	fi

	sleep 5s
	rm /tmp/gamemode_proc
}



# toggles gammastep on/off
toggle_gammastep () {
	[[ -f /tmp/gammastep_proc ]] && exit 1

	touch /tmp/gammastep_proc

	if pidof gammastep >/dev/null; then
		killall gammastep
		notify-send "Gammastep" "Gammastep disabled."
	else
		"$HOME"/scripts/launch gammastep -l 51.720633:5.310972
		notify-send "Gammastep" "Gammastep enabled."
	fi

	sleep 5
	rm /tmp/gammastep_proc
}



# start swayidle to turn off displays on idle
start_swayidle () {
	if pidof swayidle >/dev/null; then exit 1; fi

	swayidle \
		timeout 360 'hyprctl dispatch dpms off DP-2; hyprctl dispatch dpms off DP-1' \
		resume 'hyprctl dispatch dpms on DP-1; hyprctl dispatch dpms on DP-2'
}



# switches to new random wallpaper from Pictures/wallpapers folder
wallpaper () {
	local wpFolder randomWallpaper filename

	wpFolder="$HOME/Pictures/wallpapers"
	randomWallpaper=$(find "$wpFolder" -type f | shuf -n1)
	filename=$(basename "$randomWallpaper")

	cp "$wpFolder/$filename" "$wpFolder/.current/wallpaper.png"

	hyprctl hyprpaper unload all &&
	killall hyprpaper &&
	hyprpaper &
}



# increase (-i), decrease (-d), or mute (-m) volume using pactl
volume () {
	case "$1" in
		"-i")
			if [ ! "$(amixer -D pulse sget Master | tail -1 | cut -d '[' -f 2 | cut -d '%' -f 1)" -ge 100 ]; then
				pactl -- set-sink-volume 0 +2%
			fi ;;
			
		"-d")
			if [ ! "$(amixer -D pulse sget Master | tail -1 | cut -d '[' -f 2 | cut -d '%' -f 1)" -le 0 ]; then
				pactl -- set-sink-volume 0 -2%
			fi ;;
			
		"-m") pactl -- set-sink-mute 0 toggle ;;
	esac
}



# uses grim to create screenshot, either from a selection (-s) or fullscreen (-f), and copies it to the clipboard
screenshot () {
	local savedir filename

	savedir=/tmp
	filename="$savedir/$(date +'%Y%m%d-%H%M%S').png"
	 
	shot_selection () {
		if grim -g "$(slurp)" "$filename"; then
			wl-copy < "$filename"
			notify-send "Screenshot" "Copied to clipboard."
			exit 0
		else
			notify-send 'Error saving file'
			exit 1
		fi
	}
			
	shot_fullscreen () { 
		if grim "$filename"; then
			wl-copy < "$filename"
			notify-send "Screenshot" "Copied to clipboard."
			exit 0
		else
			notify-send 'Error saving file'
			exit 1
		fi
	}

	case "$1" in
		"-s") shot_selection ;;
		"-f") shot_fullscreen ;;
	esac
}



case "$1" in
	"--gamemode") toggle_gamemode ;;
	"--gammastep") toggle_gammastep ;;
	"--swayidle") start_swayidle ;;
	"--volume") volume "$2" ;;
	"--wallpaper") wallpaper ;;
	"--screenshot") screenshot "$2" ;;
	"--help"|*) usage ;;
esac