#!/bin/bash
#
# Takes colors from global.conf and prints them
#
# usage:
#   getcolors [options] [args]
#
#	  -r      get RGB value instead of hex
#     -c[0-1]  get specific color from array
#     


to_rgb () {

	local input rgb

	for hex in "$@"; do

		input=$(echo "$hex" | awk '{print toupper($0)}')
		if ! [[ "$input" =~ ^[0-9A-F]{6}$ ]] ; then
	    	echo "Not a valid hex color"
	    	exit 1
		fi

		printf  "%d %d %d" 0x${input:0:2} 0x${input:2:2} 0x${input:4:2}
	done
}

get_colors () {

	local o c i r mainConf arrColors
	
	while getopts ":c:i:r" o; do
		case "${o}" in
			c) c=${OPTARG} ;;
			i) i=${OPTARG} ;;
			r) r=1 ;;
			*) exit 1 ;;
		esac
	done
	shift $((OPTIND -1))
	
	mainConf=~/dotfiles/main.conf

	find_colors () {
		read -ra arrColors <<< "$(grep "$c" $mainConf | cut -d: -f2 | xargs)"
	}

	if ! find_colors; then
		echo "your coding sucks"
		exit 1
	fi
	
	if [ -n "${i}" ]; then
		arrColors=("${arrColors[$i]}")
	fi

	if [ ! "$r" = "" ]; then
		tmp=("${arrColors[@]}")
		arrColors=()
		for (( j=0; j<${#tmp[@]}; j++ )); do
			rgb=$(to_rgb "${tmp[j]}")
			arrColors+=("${rgb} ")
		done
	fi

	printf "%s " "${arrColors[@]}"

}

get_colors "$@"
